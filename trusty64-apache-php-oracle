# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/trusty64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
   config.vm.network "private_network", ip: "172.28.128.5"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  config.vm.synced_folder "../aistcv", "/var/www"
  config.vm.synced_folder "../share", "/home/share"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
     vb.memory = "1024"
   end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
    config.vm.provision "shell", inline: <<-SHELL
	sudo su
        apt-get update
        apt-get install -y apache2
        apt-get install -y php5 php5-dev php-pear libapache2-mod-php5
        
        a2enmod rewrite
        
        apt-get install -y libaio1
        
        apt-get install -y alien
        cd /home/share
        alien -i oracle-instantclient11.2-basic-11.2.0.4.0-1.x86_64.rpm
        alien -i oracle-instantclient11.2-sqlplus-11.2.0.4.0-1.x86_64.rpm
        alien -i oracle-instantclient11.2-devel-11.2.0.4.0-1.x86_64.rpm
        
        echo "/usr/lib/oracle/11.2/client64/lib" >> /etc/ld.so.conf.d/oracle.conf
        chmod o+r /etc/ld.so.conf.d/oracle.conf
        ldconfig
        
        echo "export ORACLE_HOME=/usr/lib/oracle/11.2/client64" >> /etc/profile.d/oracle.sh
        echo "export PATH=$PATH:$ORACLE_HOME/bin" >> /etc/profile.d/oracle.sh
        chmod o+r /etc/profile.d/oracle.sh
        
        echo "instantclient,/usr/lib/oracle/11.2/client64/lib" | pecl install oci8-2.0.8
        
        echo "extension=oci8.so" >> /etc/php5/mods-available/oci8.ini
        php5enmod oci8
        
        echo "include_path = .:/usr/share/php:/home/share/ZendFramework-1.11.11:/home/share/PHPExcel-1.7.6" >> /etc/php5/apache2/php.ini
        cp /home/share/aistcv.local.conf /etc/apache2/sites-available/
        a2dissite 000-default
        a2ensite aistcv.local
        
        usermod -a -G vagrant www-data
        service apache2 restart
        
        #chmod 777 /var/www/data/logs/development.log
        #chmod 777 /var/www/data/logs/production.log
   SHELL
end
